// create collection
db.createCollection("Student");

// insert documents
db.Student.insertMany([
    {
        roll_no: '1',
        name: 'John Smith',
        class: 'A',
        age: 18,
        location: 'New York',
        marks: 90
    },
    {
        roll_no: '2',
        name: 'Emily Johnson',
        class: 'B',
        age: 17,
        location: 'Los Angeles',
        marks: 85
    },
    {
        roll_no: '3',
        name: 'Michael Brown',
        class: 'C',
        age: 16,
        location: 'Chicago',
        marks: 92
    },
    {
        roll_no: '4',
        name: 'Sophia Wilson',
        class: 'A',
        age: 18,
        location: 'San Francisco',
        marks: 88
    },
    {
        roll_no: '5',
        name: 'Daniel Lee',
        class: 'B',
        age: 17,
        location: 'Houston',
        marks: 94
    },
    {
        roll_no: '6',
        name: 'Olivia Kim',
        class: 'C',
        age: 16,
        location: 'Boston',
        marks: 87
    },
    {
        roll_no: '7',
        name: 'James Davis',
        class: 'A',
        age: 18,
        location: 'Seattle',
        marks: 91
    },
    {
        roll_no: '8',
        name: 'Ava Martinez',
        class: 'B',
        age: 17,
        location: 'Miami',
        marks: 86
    },
    {
        roll_no: '9',
        name: 'William Rodriguez',
        class: 'C',
        age: 16,
        location: 'Dallas',
        marks: 89
    },
    {
        roll_no: '10',
        name: 'Emma Harris',
        class: 'A',
        age: 18,
        location: 'Denver',
        marks: 93
    }
]);

// display entire collection
db.Student.find();


//  find students with roll no 1
db.Student.find({roll_no:'1'});

// find students with roll no 4 and age 18
db.Student.find({roll_no:'4',age:18});


// find all students of class A
db.Student.find({class:'A'});

// find one student of class A
db.Student.findOne({class:'A'})

// display only roll no and names of all students
db.Student.find({},{roll_no:1,name:1,_id:0});

// find students with marks more than 90 marks
db.Student.find({marks:{$gte:90}},{name:1,class:1,marks:1,_id:0});

//find students of class A with  more than 90 marks
db.Student.find({$and:[{class:'A'},{marks:{$gte:90}}]},{name:1,class:1,marks:1,_id:0});

// find students of class A or C
db.Student.find({$or:[{class:'A'},{class:'B'}]},{name:1,class:1,marks:1,_id:0});

// update one document
db.Student.updateOne({class:'C'},{$set:{"age":15}});

//update all documents
db.Student.updateMany({class:'C'},{$set:{"age":14}});

// update one document
db.Student.updateOne({roll_no:'7',name:'James Davis'},{$set:{'name':'Rohit Sharma'}})

// insert one document using insertOne
db.Student.insertOne({
roll_no : '11',
name : 'Aniket Desai',
class : 'A',
age : 18,
location : 'Boston',
marks : 92
});

// deleting one record
db.Student.deleteOne({roll_no:'10'});

// deleting multiple records 
db.Student.deleteMany({class:'B'})



// delete collection
db.Student.drop();

show collections;



